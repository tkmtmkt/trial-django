upstream django {
    server app:8000
}

server {
    server_name  localhost;

    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    # SSL Configuration
    # generated 2025-03-05, Mozilla Guideline v5.7, nginx 1.27.4, OpenSSL 3.4.0, intermediate config
    # https://ssl-config.mozilla.org/#server=nginx&version=1.27.4&config=intermediate&openssl=3.4.0&guideline=5.7
    ssl_certificate     /etc/ssl/private/server.crt;
    ssl_certificate_key /etc/ssl/private/server.key;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ecdh_curve X25519:prime256v1:secp384r1;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # see also ssl_session_ticket_key alternative to stateful session cache
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/ssl/private/dhparam
    ssl_dhparam "/etc/ssl/private/dhparam";

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/cert.pem;

    # replace with the IP address of your resolver;
    # async 'resolver' is important for proper operation of OCSP stapling
    resolver 127.0.0.1;

    # If certificates are marked OCSP Must-Staple, consider managing the
    # OCSP stapling cache with an external script, e.g. certbot-ocsp-fetcher

    location / {
        # プロキシ設定
        proxy_pass http://django;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $remote_addr;

        # タイムアウト設定（デフォルト60s）
        proxy_connect_timeout   60;
        proxy_send_timeout      60;
        proxy_read_timeout      60;

        proxy_buffering off;
    }

    location /static/ {
        alias /data/static/;
    }
}

# HSTS
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    return 301 https://$host$request_uri;
}
